/*
 * The MIT License (MIT)
 * 
 * Copyright (c) 2014 Stefan Dollase
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
function AppStateBinder(e){this.registerHashChanged=function(e){if(!("onhashchange"in window)){var t=location.href;window.setInterval(function(){var n=location.href;if(t!==n){var r=t;t=n;e.call(window,{type:"hashchange",newURL:n,oldURL:r})}},100)}else if(window.addEventListener){window.addEventListener("hashchange",e,false)}else if(window.attachEvent){window.attachEvent("onhashchange",e)}};this.getHash=function(){var e=window.location.hash;if(e.length>0){if(e.substring(0,1)==="#"){e=e.substring(1)}}else{e=""}return e};this.hashChanged=function(){if(this.ignoreChangeOnce){this.ignoreChangeOnce=false;return}this.parseHash()};this.parseHash=function(){this.ignoreExportCurrentState=true;this.ignoreFireChanged(true);var e=this.getHash();var t=e.split("|");var n=this.getNames();var r={};for(var i=0;i<t.length;i++){if(t[i]===""){}else{var s=this.parseHashEntry(t[i]);if(s!==false){delete n[s]}}}for(var o in n){this.unset(o)}this.ignoreFireChanged(false);this.ignoreExportCurrentState=false;this.fireChangedForCache()};this.getNames=function(){var e={};for(var t in this.appState){e[t]=true}return e};this.parseHashEntry=function(e){var t;for(var n in this.appState){t=this.appState[n].parse(e);if(t!==false){this.set(n,t);return n}}return false};this.exportCurrentState=function(){if(this.ignoreExportCurrentState){return}var e="";for(var t in this.appState){if(this.appState[t].stringValue!==false){e+="|"+this.appState[t].stringValue}}var n=e.substring(1);if(n===this.getHash()){this.ignoreChangeOnce=false}else{this.ignoreChangeOnce=true;window.location.hash=n}};this.fireChangedForAll=function(){for(var e in this.appState){this.fireChanged(e)}};this.fireChangedForCache=function(){for(var e in this.fireChangedCache){this.fireChanged(e)}};this.fireChanged=function(e){if(this.ignoreFireChangedCounter>0){this.fireChangedCache[e]=true}else{this.appState[e].changed(this.get(e))}};this.set=function(e,t,n){var r=this.appState[e].stringValue;this.appState[e].dataValue=t;this.appState[e].stringValue=this.appState[e].stringify(t);if(n||r!==this.appState[e].stringValue){this.exportCurrentState();this.fireChanged(e)}};this.toggle=function(e){if(this.appState[e].flag!==undefined){this.set(e,!this.isSet(e))}else if(this.appState[e].options!==undefined){var t=this.appState[e].options;var n=this.indexOf(t,this.get(e));var r=(n+1)%t.length;this.set(e,t[r])}else{throw"cannot toggle "+e}};this.unset=function(e){var t=this.appState[e].stringValue;this.appState[e].dataValue=false;this.appState[e].stringValue=false;if(t!==this.appState[e].stringValue){this.fireChanged(e);this.exportCurrentState()}};this.isSet=function(e){return this.appState[e].dataValue!==false};this.get=function(e,t){if(this.isSet(e)){return this.appState[e].dataValue}else if(t===undefined){return false}else{return t}};this.setupAppState=function(e){for(var t in e){if(e[t].flag){this.appState[t]=this.createFlag(t,e[t].flag,e[t].changed)}else if(e[t].option){this.appState[t]=this.createOption(t,e[t].option,e[t].changed)}else if(e[t].json){this.appState[t]=this.createJSON(t,e[t].changed)}else{this.appState[t]={name:t,dataValue:false,stringValue:false,changed:e[t].changed,parse:e[t].parse,stringify:e[t].stringify}}}};this.createFlag=function(e,t,n){return{name:e,flag:t,dataValue:false,stringValue:false,changed:n,parse:function(e){if(e===t){return true}else{return false}},stringify:function(e){if(e===true){return t}else{return false}}}};this.createOption=function(e,t,n){return{name:e,options:t,dataValue:false,stringValue:false,changed:n,parse:function(e){for(var n=0;n<t.length;n++){if(e===t[n]){return e}}return false},stringify:function(e){for(var n=0;n<t.length;n++){if(e===t[n]){return e}}return false}}};this.createJSON=function(e,t){return{name:e,dataValue:false,stringValue:false,changed:t,parse:function(e){try{return JSON.parse(e)}catch(t){return false}},stringify:function(e){if(e===false){return false}else{return JSON.stringify(e)}}}};this.indexOf=function(e,t){for(var n=0;n<e.length;n++){if(e[n]===t){return n}}return-1};this.ignoreFireChanged=function(e){if(e){if(this.ignoreFireChangedCounter===0){this.fireChangedCache={}}this.ignoreFireChangedCounter++}else{this.ignoreFireChangedCounter--}};var t=this;this.ignoreExportCurrentState=false;this.ignoreFireChangedCounter=0;this.appState={};this.setupAppState(e);this.registerHashChanged(function(){t.hashChanged(t)});this.ignoreFireChanged(true);this.hashChanged();this.ignoreFireChanged(false)}